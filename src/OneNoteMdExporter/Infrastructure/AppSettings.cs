using alxnbl.OneNoteMdExporter.Models;
using Microsoft.Extensions.Configuration;

namespace alxnbl.OneNoteMdExporter.Infrastructure
{
    public class AppSettings
    {

        /*
          * Export general settings
          * */

        /// <summary>
        /// Add at the begining of each page a YAML header that include Page metadata (cf https://assemble.io/docs/YAML-front-matter.html)
        /// </summary>
        public bool AddFrontMatterHeader { get; set; } = true;

        /// <summary>
        /// Maximum file size of md file. Reduce this value to avoid error of max file system file path
        /// </summary>
        public int MdMaxFileLength { get; set; } = 50;

        /// <summary>
        /// One of pandoc format https://pandoc.org/MANUAL.html#general-options
        /// Rq: For Joplin "gfm" is recommanded
        /// </summary>
        public string PanDocMarkdownFormat { get; set; } = "gfm";

        /// <summary>
        /// How page hierarchies should be exported :
        /// - HiearchyAsFolderTree : add folder tree to store pages
        /// - HiearchyAsPageTitlePrefix : prefix page title with their parent / grand-parent page name
        /// - IgnoreHierarchy : ignore page hierarchy
        /// Nb : ignored for Joplin export
        /// </summary>
        public PageHierarchyEnum ProcessingOfPageHierarchy { get; set; } = PageHierarchyEnum.HiearchyAsFolderTree;

        /*
         * Markdown rendering Settings
         * */

        /// <summary>
        /// Convert HTML IMG tag generated by PanDoc into markdown references
        /// </summary>
        public bool PostProcessingMdImgRef { get; set; } = true;

        /// <summary>
        /// Remove undesired quotation blocks sometimes generated by PanDoc
        /// </summary>
        public bool PostProcessingRemoveQuotationBlocks { get; set; } = true;

        /// <summary>
        /// Remove OneNote header generated by OneNote Export APIs
        /// </summary>
        public bool PostProcessingRemoveOneNoteHeader { get; set; } = true;

        /// <summary>
        /// Remove multiple consecutive linebreak generated by PanDoc
        /// </summary>
        public bool RemoveConsecutiveLinebreaks { get; set; } = true;

        /// <summary>
        /// Remove \r\n characters causing side-effects with other post-processing rules
        /// </summary>
        public bool RemoveCarriageReturn { get; set; } = true;


        /*
         * Developer Settings
         * */

        /// <summary>
        /// Enable verbose mode and keep temporary files (.docx)
        /// </summary>
        public bool Debug { get; set; } = false;



        public static AppSettings LoadAppSettings()
        {
            IConfigurationRoot configRoot = new ConfigurationBuilder()
                .AddJsonFile("appsettings.json")
                .Build();
            AppSettings appSettings = configRoot.Get<AppSettings>();
            return appSettings;
        }
    }
}
